services:
  backend:
    build:
      context: .
      dockerfile: backend/Dockerfile
    ports:
      - "8000:8000"
    environment:
      PRODUCTION: ${PRODUCTION:-0}
      SECRET_KEY: ${SECRET_KEY}
      DATABASE_NAME: ${DATABASE_NAME}
      DATABASE_USER: ${DATABASE_USER}
      DATABASE_PASSWORD: ${DATABASE_PASSWORD}
      DATABASE_HOST: ${DATABASE_HOST}
      DATABASE_PORT: 5432
      EMAIL_HOST_USER: ${EMAIL_HOST_USER}
      EMAIL_HOST_PASSWORD: ${EMAIL_HOST_PASSWORD}
      FRONTEND_URL: ${FRONTEND_URL}
      HOST_DOMAIN: ${HOST_DOMAIN}
      OPENAI_API_KEY: ${OPENAI_API_KEY}
      ASTRA_DB_APPLICATION_TOKEN: ${ASTRA_DB_APPLICATION_TOKEN}
      ASTRA_DB_API_ENDPOINT: ${ASTRA_DB_API_ENDPOINT}
      REDIS_HOST: redis-service
      REDIS_PORT: 6379
    networks:
      - app-network
    depends_on:
      redis-service:
        condition: service_healthy
    volumes:
      - ./backend:/app

  frontend:
    build:
      context: .
      dockerfile: client/Dockerfile
    ports:
      - "8080:80"
    volumes:
      - ./client:/app
      - /app/node_modules
    networks:
      - app-network
    depends_on:
      - backend

  redis-service:
    image: redis:6.2-alpine
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5

networks:
  app-network:
    driver: bridge